
DROP TABLE IF EXISTS TB_ASMI_LOV_QUERIES;
CREATE TABLE TB_ASMI_LOV_QUERIES (
  APP_ID varchar(100) NOT NULL,
  QUERY_ID varchar(100) NOT NULL,
  QUERY_STRING varchar(1000) NOT NULL,
  DB_JNDI_NAME varchar(50) NOT NULL,
  QUERY_TYPE varchar(3) DEFAULT 'SQL',
  BINDVAR_COLS varchar(300) DEFAULT NULL,
  BINDVAR_DATA_TYPES varchar(300) DEFAULT NULL,
  FILTER_COLS varchar(300) DEFAULT NULL,
  ORDERBY_COL varchar(40) DEFAULT NULL,
  ORDERBY_TYPE varchar(5) DEFAULT 'ASC',
  CREATE_TS timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  UPDATE_TS timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATE_BY varchar(50) DEFAULT NULL,
  SESSION_REQD varchar(1) DEFAULT NULL,
  VERSION_NO int DEFAULT 1,
  PRIMARY KEY (APP_ID,QUERY_ID) 
) ;

DROP TABLE IF EXISTS TB_ASMI_OS_DTLS;
CREATE TABLE TB_ASMI_OS_DTLS (
  OS_ID varchar(50) NOT NULL,
  OS_DESC varchar(200) DEFAULT NULL,
  CREATE_BY varchar(100) DEFAULT NULL,
  CREATE_TS timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO int DEFAULT 1,
  PRIMARY KEY (OS_ID)
 );

DROP TABLE IF EXISTS TB_ASNF_DEVICES_MASTER CASCADE;
CREATE TABLE TB_ASNF_DEVICES_MASTER (
  APP_ID varchar(100) NOT NULL,
  NOTIF_REG_ID varchar(255) NOT NULL,
  DEVICE_ID varchar(255) DEFAULT NULL,
  DEVICE_NAME varchar(255) DEFAULT NULL,
  OS_ID varchar(50) DEFAULT NULL,
  OS_VERSION varchar(255) DEFAULT NULL,
  STATUS varchar(20) DEFAULT NULL,
  CREATED_BY varchar(255) DEFAULT NULL,
  CREATED_TS timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO int DEFAULT 1,
  MAKER_ID VARCHAR(45),
  MAKER_TS timestamp DEFAULT CURRENT_TIMESTAMP,
  CHECKER_ID VARCHAR(45),
  CHECKER_TS timestamp DEFAULT CURRENT_TIMESTAMP,
  AUTH_STATUS VARCHAR(45) DEFAULT 'U',
  PRIMARY KEY (APP_ID,NOTIF_REG_ID)
);

DROP TABLE IF EXISTS TB_ASNF_GROUP_DEVICES;
CREATE TABLE TB_ASNF_GROUP_DEVICES (
  APP_ID varchar(100) NOT NULL,
  GROUP_ID varchar(255) NOT NULL,
  NOTIF_REG_ID varchar(255) NOT NULL,
  CREATED_BY varchar(255) DEFAULT NULL,
  CREATED_TS timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO int DEFAULT 1,
  PRIMARY KEY (APP_ID,GROUP_ID,NOTIF_REG_ID)
) ;

DROP TABLE IF EXISTS TB_ASNF_GROUP_MASTER;
CREATE TABLE TB_ASNF_GROUP_MASTER (
  APP_ID varchar(100) NOT NULL,
  GROUP_ID varchar(255) NOT NULL,
  GROUP_DESC varchar(500) DEFAULT NULL,
  CREATED_BY varchar(50) DEFAULT NULL,
  CREATED_TS timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO int DEFAULT 1,
  PRIMARY KEY (APP_ID,GROUP_ID)
) ;

DROP TABLE IF EXISTS TB_ASNF_TXN_DEVICES;
CREATE TABLE TB_ASNF_TXN_DEVICES (
  NOTIF_ID int NOT NULL,
  APP_ID varchar(100) NOT NULL,
  NOTIF_REG_ID varchar(255) NOT NULL,
  PRIMARY KEY (NOTIF_ID,APP_ID,NOTIF_REG_ID)
);

DROP TABLE IF EXISTS TB_ASNF_TXN_GROUPS;
CREATE TABLE TB_ASNF_TXN_GROUPS (
  NOTIF_ID int NOT NULL,
  APP_ID varchar(100) NOT NULL,
  GROUP_ID varchar(255) NOT NULL,
   PRIMARY KEY (NOTIF_ID,APP_ID,GROUP_ID)
) ;

DROP TABLE IF EXISTS TB_ASNF_TXN_LOG;
CREATE TABLE TB_ASNF_TXN_LOG (
  NOTIF_ID int NOT NULL,
  APP_ID varchar(100) NOT NULL,
  NOTIF_REG_ID varchar(255) NOT NULL,
  STATUS char(150) DEFAULT NULL,
  CREATED_BY varchar(150) DEFAULT NULL,
  CREATED_TS timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO int DEFAULT 1,
   PRIMARY KEY (NOTIF_ID,APP_ID,NOTIF_REG_ID)
) ;

DROP TABLE IF EXISTS TB_ASNF_TXN_MASTER;
CREATE TABLE TB_ASNF_TXN_MASTER (
  NOTIF_ID int NOT NULL,
  APP_ID varchar(100) NOT NULL,
  NOTIF_MSG varchar(255) NOT NULL,
  PRIMARY KEY (NOTIF_ID,APP_ID,NOTIF_MSG)
) ;


 DROP TABLE IF EXISTS TB_ASTP_SEQ_GEN;
CREATE TABLE TB_ASTP_SEQ_GEN (
  SEQUENCE_NAME varchar(50) NOT NULL,
  SEQUENCE_VALUE int NOT NULL,
  CREATE_BY varchar(20) DEFAULT NULL,
  CREATE_TS timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO int DEFAULT 1,
  PRIMARY KEY (SEQUENCE_NAME)
 );
 
 /*CREATE TABLE TB_AFTP_WORKFLOW_DET 
( 
  TRANSACTION_REF_NO VARCHAR(30) NOT NULL 
, VERSION_NO DECIMAL(10, 0) NOT NULL 
, WORKFLOW_ID VARCHAR(100) NOT NULL 
, CURRENT_STAGE VARCHAR(100) NOT NULL 
, SCREEN_ID VARCHAR(100) NOT NULL 
, NEXT_STAGE VARCHAR(100) NULL 
, STATUS VARCHAR(20) NULL 
, APP_ID VARCHAR(100) NOT NULL 
, INTERFACE_ID VARCHAR(100) NOT NULL 
, USER_ID VARCHAR(100) NULL 
, SCREEN_DATA text NULL 
, STAGE_SEQ_NO VARCHAR(255) NULL 
, ACTION VARCHAR(255) NULL 
, CREATE_USER_ID VARCHAR(100) NULL
, CREATE_TS TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP
, PRIMARY KEY ( TRANSACTION_REF_NO, VERSION_NO, WORKFLOW_ID, CURRENT_STAGE, SCREEN_ID, APP_ID, INTERFACE_ID )
);
*/
 
 DROP TABLE IF EXISTS TB_ASTP_WORKFLOW_DET;
 CREATE TABLE TB_ASTP_WORKFLOW_DET
  (
    TRANSACTION_REF_NO VARCHAR(30) NOT NULL ,
    VERSION_NO DECIMAL(10, 0) NULL, 
   WORKFLOW_ID        VARCHAR(100) NOT NULL ,
   APP_ID             VARCHAR(100) NOT NULL ,
   CURRENT_STAGE       VARCHAR(100) NULL ,
    SCREEN_ID          VARCHAR(100) NULL ,
    NEXT_STAGE         VARCHAR(100) NULL ,
    STATUS             VARCHAR(20) NULL ,
    INTERFACE_ID        VARCHAR(100) NULL ,
   USER_ID             VARCHAR(100) NULL ,
    SCREEN_DATA text NULL ,
    STAGE_SEQ_NO   VARCHAR(255 ) NULL ,
    ACTION         VARCHAR(255 ) NULL ,
    CREATE_USER_ID VARCHAR(100 ) NULL ,
    CREATE_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP ,
    CONSTRAINT TB_ASTP_WORKFLOW_DET_PK PRIMARY KEY (TRANSACTION_REF_NO, WORKFLOW_ID, APP_ID)
  );

  DROP TABLE IF EXISTS TB_ASMI_APP_DTLS;
CREATE TABLE TB_ASMI_APP_DTLS (
  APP_ID varchar(100) NOT NULL,
  OS_ID varchar(50) NOT NULL,
  APP_DESC varchar(200) DEFAULT NULL,
  CREATE_BY varchar(100) DEFAULT NULL,
  CREATE_TS timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO int DEFAULT 1,
  CONSTRAINT TB_ASMI_APP_DTLS_PK PRIMARY KEY (APP_ID,OS_ID)
) ;

DROP TABLE IF EXISTS TB_ASFS_FILE_DETAILS;
CREATE TABLE TB_ASFS_FILE_DETAILS 
( 
  APP_ID VARCHAR(100) NOT NULL 
, SCREEN_ID VARCHAR(100) NULL 
, USER_ID VARCHAR(100)  NULL 
, FILE_NAME VARCHAR(150)  NOT NULL  
, FILE_TYPE VARCHAR(20) NULL 
, INTERFACE_ID VARCHAR(30) NULL
, CREATE_USER_ID VARCHAR(100) NULL 
, LAST_UPLOADED_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP 
, RECENT_UPLOADED_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
, PRIMARY KEY ( APP_ID,FILE_NAME) 
);

/*
 * Changes made by Ripu
 * Below table added for FS item : Appzillon - 3.1 - 13, 15, 65 Start
 */

/* Appzillon - 3.1 - 13, 15, 65 END */

/*
 * Changes made by Ripu
 * Below tables added for (OTA) FS item : Appzillon - 3.1 - 13 Start
 */

DROP TABLE IF EXISTS TB_ASMI_APP_USER;
  CREATE TABLE TB_ASMI_APP_USER
   (   
  USER_ID VARCHAR(50) NOT NULL, 
    PARENT_APP_ID VARCHAR(100) NOT NULL,
  CHILD_APP_ID VARCHAR(100) NOT NULL, 
  CREATE_USER_ID VARCHAR(50), 
  CREATE_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP, 
  VERSION_NO int DEFAULT 1, 
   CONSTRAINT TB_ASMI_APP_USER_PK PRIMARY KEY (USER_ID, PARENT_APP_ID, CHILD_APP_ID)
    ) ;
    
    
    DROP TABLE IF EXISTS TB_ASMI_APP_FILES;
  CREATE TABLE TB_ASMI_APP_FILES 
   (  
  APP_ID VARCHAR(100) NOT NULL, 
  APP_VERSION VARCHAR(10) NOT NULL,
    OS VARCHAR(20) NOT NULL,
    FILE_NAME VARCHAR(100) NOT NULL,
  FILE_PATH VARCHAR(255), 
  ACTION VARCHAR(10),
  CREATE_USER_ID VARCHAR(100), 
  CREATE_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP, 
  VERSION_NO int DEFAULT 1,
  CONSTRAINT TB_ASMI_APP_FILES_PK PRIMARY KEY (APP_ID, APP_VERSION, OS, FILE_NAME)
   ) ;
   

   DROP TABLE IF EXISTS TB_ASMI_APP_OS_VERSION;
  CREATE TABLE TB_ASMI_APP_OS_VERSION
   (   
    APP_ID VARCHAR(100) NOT NULL, 
    OS VARCHAR(20) NOT NULL,
    APP_VERSION VARCHAR(10) NOT NULL, 
    CREATE_USER_ID VARCHAR(50), 
    CREATE_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP, 
    VERSION_NO int DEFAULT 1, 
    CONSTRAINT TB_ASMI_APP_OS_VERSION_PK PRIMARY KEY (APP_ID, OS, APP_VERSION)
    ) ;
    
    
 /* Appzillon - 3.1 - 13 END */
   
/* 
    * Changes Made By Ripu
    * Appzillon - 3.1 - Audit Log Start
    */
   
/* Appzillon - 3.1 - Send SMS to user End*/


/*
 * Changes done by Ripu
 * Appzillon - 3.1 - Task Repair Start
 */
/*CREATE TABLE TB_AFHS_WORKFLOW_DET
  (
    TRANSACTION_REF_NO VARCHAR(30) NOT NULL ,
    VERSION_NO         DECIMAL(10, 0) NOT NULL,
   WORKFLOW_ID        VARCHAR(100) NOT NULL ,
   CURRENT_STAGE       VARCHAR(100) NOT NULL ,
    SCREEN_ID          VARCHAR(100) NOT NULL ,
    NEXT_STAGE         VARCHAR(100) NULL ,
    STATUS             VARCHAR(20) NULL ,
    APP_ID             VARCHAR(100) NOT NULL ,
    INTERFACE_ID        VARCHAR(100) NOT NULL ,
   USER_ID             VARCHAR(100) NULL ,
    SCREEN_DATA text NULL ,
    STAGE_SEQ_NO   VARCHAR(255) NULL ,
    ACTION         VARCHAR(255) NULL ,
    CREATE_USER_ID VARCHAR(100) NULL ,
    CREATE_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP ,
    HISTORY_VERSION_NO INT NOT NULL,
    CONSTRAINT TB_AFHS_WORKFLOW_DET_PK PRIMARY KEY (TRANSACTION_REF_NO, VERSION_NO, WORKFLOW_ID, CURRENT_STAGE,SCREEN_ID ,APP_ID ,INTERFACE_ID,HISTORY_VERSION_NO )
  );*/

DROP TABLE IF EXISTS TB_ASHS_WORKFLOW_DET;
CREATE TABLE TB_ASHS_WORKFLOW_DET
  (
    TRANSACTION_REF_NO VARCHAR(30) NOT NULL ,
    VERSION_NO         INT NOT NULL,
   WORKFLOW_ID        VARCHAR(100) NOT NULL ,
   APP_ID             VARCHAR(100) NOT NULL ,
   CURRENT_STAGE       VARCHAR(100) NULL ,
    SCREEN_ID          VARCHAR(100) NULL ,
    NEXT_STAGE         VARCHAR(100) NULL ,
    STATUS             VARCHAR(20) NULL ,
    INTERFACE_ID        VARCHAR(100) NULL ,
   USER_ID             VARCHAR(100) NULL ,
    SCREEN_DATA text NULL ,
    STAGE_SEQ_NO   VARCHAR(255) NULL ,
    ACTION         VARCHAR(255) NULL ,
    CREATE_USER_ID VARCHAR(100) NULL ,
    CREATE_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP ,
    CONSTRAINT TB_ASHS_WORKFLOW_DET_PK PRIMARY KEY (TRANSACTION_REF_NO, VERSION_NO, WORKFLOW_ID, APP_ID)
  );
  /* Appzillon - 3.1 - Task Repair End*/
  
 /*
 * Changes done by Ripu
 * Appzillon - 3.1 - Drag and drop Start
 */
  
  DROP TABLE IF EXISTS TB_ASMI_DRAG_DROP;
     /*CREATE TABLE TB_ASMI_DRAG_DROP
     (  
     APP_ID VARCHAR(100), 
     USER_ID VARCHAR(50), 
    SCREEN_ID VARCHAR(100), 
    LAYOUT VARCHAR(100), 
    PARENT_ID VARCHAR(100),
    HTML_ID VARCHAR(100),
    SEQUENCE_NO INT,
    CREATED_BY VARCHAR(50), 
    CREATE_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP, 
    VERSION_NO int DEFAULT 1,
    CONSTRAINT PK_TB_ASMI_DRAG_DROP PRIMARY KEY (APP_ID, USER_ID, SCREEN_ID, LAYOUT, PARENT_ID, HTML_ID)
    ) ;*/
   /* Appzillon - 3.1 - Drag and Drop End*/
    
    
DROP TABLE IF EXISTS TB_ASTP_BEACON_MASTER;
CREATE TABLE TB_ASTP_BEACON_MASTER (
  APP_ID varchar(100) DEFAULT NULL,
  ID int NOT NULL,
  DEVICE_ID varchar(225) DEFAULT NULL,
  USER_ID varchar(100) DEFAULT NULL,
  ENTRY_TIME timestamp NULL DEFAULT NULL,
  STATUS varchar(45) DEFAULT NULL,
  PRIMARY KEY (ID)
);

DROP TABLE IF EXISTS TB_ASTP_OTP_ENGINE;
CREATE TABLE TB_ASTP_OTP_ENGINE 
   (  
    REF_NO int NOT NULL, 
  APP_ID varchar(100), 
  USER_ID varchar(255), 
  INTERFACE_ID varchar(255), 
  SESSION_ID varchar(255), 
  OTP varchar(255), 
  OTP_GEN_TS timestamp,
  OTP_EXP_TS timestamp,
  OTP_STATUS varchar(255) DEFAULT 'N', 
  OTP_VAL_TS timestamp,
  REQ_PAYLOAD text, 
  REQ_PAYLOAD_STATUS varchar(200), 
  REQ_PAYLOAD_PROCESS_TS timestamp, 
  /*
  * Below Fields Added by sasidhar
  * 
  */
  OTP_VALIDATION_COUNT int,
  OTP_RESENT_COUNT int,
  OTP_RESEND_LOCK varchar(1),
  OTP_RESEND_LOCK_TS timestamp,
  VERSION_NO int NOT NULL DEFAULT 0,
  CONSTRAINT TB_ASTP_OTP_ENGINE_PK PRIMARY KEY (REF_NO)
   );

DROP TABLE IF EXISTS TB_ASTP_AR_MASTER;
CREATE TABLE TB_ASTP_AR_MASTER (
APP_ID varchar(255) DEFAULT NULL,
ID int NOT NULL,
REGION_CODE varchar(255) DEFAULT NULL,
CATEGORY varchar(255) DEFAULT NULL,
LATITUDE varchar(255) DEFAULT NULL,
LONGITUDE varchar(255) DEFAULT NULL,
TITLE  varchar(255) DEFAULT NULL,
ADDITIONAL_INFO varchar(255) DEFAULT NULL,
DESCRIPTION varchar(255) DEFAULT NULL,
IMAGE varchar(255) DEFAULT NULL,
PRIMARY KEY (ID)
);

DROP TABLE IF EXISTS TB_ASMI_SCHEDULER_JOB_EXP;
CREATE TABLE TB_ASMI_SCHEDULER_JOB_EXP (
  JOB_NAME varchar(45) NOT NULL,
  START_DATE varchar(45) DEFAULT NULL,
  END_DATE varchar(45) DEFAULT NULL,
  EXP_START_SEC varchar(45) DEFAULT NULL,
  EXP_SEC varchar(45) DEFAULT NULL,
  EXP_MIN varchar(45) DEFAULT NULL,
  EXP_HR varchar(45) DEFAULT NULL,
  EXP_DOM varchar(45) DEFAULT NULL,
  EXP_MONTH varchar(45) DEFAULT NULL,
  EXP_DOW varchar(45) DEFAULT NULL,
  EXP_YEAR varchar(45) DEFAULT NULL,
  EXPRESSION varchar(45) DEFAULT NULL,
  PRIMARY KEY (JOB_NAME)
);

DROP TABLE IF EXISTS TB_ASMI_SCHEDULER_JOB;
CREATE TABLE TB_ASMI_SCHEDULER_JOB (
  APP_ID varchar(45) DEFAULT NULL,
  JOB_NAME varchar(45) NOT NULL,
  JOB_CLASS varchar(45) DEFAULT NULL,
  JOB_DATA varchar(255) DEFAULT NULL,
  JOB_STATUS varchar(45) DEFAULT 'P',
  JOB_CREATED_TS timestamp NULL DEFAULT NULL,
  JOB_EXECUTED_TS timestamp NULL DEFAULT NULL,
  PRIMARY KEY (JOB_NAME)
);

DROP TABLE IF EXISTS TB_OS;
CREATE TABLE TB_OS (
  OS_ID varchar(15) NOT NULL,
  CREATE_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (OS_ID)
);

CREATE OR REPLACE VIEW VW_NOTIFY_APPID as select DISTINCT(APP_ID) appId from TB_ASNF_DEVICES_MASTER;

CREATE OR REPLACE VIEW VW_DIGITS AS
  SELECT 0 AS digit UNION ALL
  SELECT 1 UNION ALL
  SELECT 2 UNION ALL
  SELECT 3 UNION ALL
  SELECT 4 UNION ALL
  SELECT 5 UNION ALL
  SELECT 6 UNION ALL
  SELECT 7 UNION ALL
  SELECT 8 UNION ALL
  SELECT 9;
  
CREATE OR REPLACE VIEW VW_NUMBERS AS
  SELECT
    ones.digit + tens.digit * 10 + hundreds.digit * 100 + thousands.digit * 1000 AS number
  FROM
    VW_DIGITS as ones,
    VW_DIGITS as tens,
    VW_DIGITS as hundreds,
    VW_DIGITS as thousands;
    
CREATE OR REPLACE VIEW VW_DATES AS
SELECT
CAST((current_date-number) as Date) AS date
FROM VW_NUMBERS;

CREATE OR REPLACE VIEW VW_OS_DATES as select d.date osdates,OS_ID AS datesos,appId from VW_DATES d,TB_OS o,VW_NOTIFY_APPID ap;

CREATE OR REPLACE VIEW VW_MESSAGE_STATS AS
select DATE(tnl.CREATED_TS) AS TXNDATE,count(0) AS num,tnm.OS_ID AS os,tnl.APP_ID AS appId
from TB_ASNF_TXN_LOG tnl,TB_ASNF_DEVICES_MASTER tnm
where tnl.NOTIF_REG_ID = tnm.NOTIF_REG_ID
group by DATE(tnl.CREATED_TS),tnm.OS_ID,tnl.APP_ID;

CREATE OR REPLACE VIEW VW_MESSAGE_NOTIFY_STATS AS
SELECT VW_OS_DATES.appId,osdates,COALESCE(num,0) count,datesos 
FROM VW_MESSAGE_STATS RIGHT OUTER JOIN VW_OS_DATES ON osdates=TXNDATE AND datesos=os and 
VW_OS_DATES.appId=VW_MESSAGE_STATS.appId;

  INSERT INTO TB_ASTP_SEQ_GEN (SEQUENCE_NAME,SEQUENCE_VALUE,CREATE_BY,CREATE_TS,VERSION_NO) VALUES ('ADMIN_DOMAIN',1,NULL,CURRENT_TIMESTAMP,1);
  INSERT INTO TB_ASTP_SEQ_GEN (SEQUENCE_NAME,SEQUENCE_VALUE,CREATE_BY,CREATE_TS,VERSION_NO) VALUES ('GROUP_NO',1,NULL,CURRENT_DATE,1);
  INSERT INTO TB_ASTP_SEQ_GEN (SEQUENCE_NAME,SEQUENCE_VALUE,CREATE_BY,CREATE_TS,VERSION_NO) VALUES ('NOTIFICATION_NO',1,NULL,CURRENT_DATE,1);
  INSERT INTO TB_ASTP_SEQ_GEN (SEQUENCE_NAME,SEQUENCE_VALUE,CREATE_BY,CREATE_TS,VERSION_NO) VALUES ('TXNREF',1,NULL,CURRENT_DATE,1);
  INSERT INTO TB_ASTP_SEQ_GEN (SEQUENCE_NAME,SEQUENCE_VALUE,CREATE_BY,CREATE_TS,VERSION_NO) VALUES ('WORKFLOW',1,NULL,CURRENT_DATE,1);
  INSERT INTO TB_ASTP_SEQ_GEN (SEQUENCE_NAME,SEQUENCE_VALUE,CREATE_BY,CREATE_TS,VERSION_NO) VALUES ('JMS_TXN_ID',1,NULL,CURRENT_DATE,1);
  INSERT INTO TB_ASTP_SEQ_GEN (SEQUENCE_NAME,SEQUENCE_VALUE,CREATE_BY,CREATE_TS,VERSION_NO) VALUES ('ACCESS_REF',1,NULL,CURRENT_DATE,1);
  INSERT INTO TB_ASTP_SEQ_GEN (SEQUENCE_NAME,SEQUENCE_VALUE,CREATE_BY,CREATE_TS,VERSION_NO) VALUES ('BEACON_REF',1,NULL,CURRENT_DATE,1);
  INSERT INTO TB_ASTP_SEQ_GEN (SEQUENCE_NAME,SEQUENCE_VALUE,CREATE_BY,CREATE_TS,VERSION_NO) VALUES ('ISO8583_F11',1,NULL,CURRENT_DATE,1);
  INSERT into TB_ASTP_SEQ_GEN (SEQUENCE_NAME,SEQUENCE_VALUE,CREATE_BY,CREATE_TS,VERSION_NO) values ('OTP_REF_NO',1,NULL,CURRENT_DATE,1);
  INSERT INTO TB_ASTP_SEQ_GEN (SEQUENCE_NAME,SEQUENCE_VALUE,CREATE_BY,CREATE_TS,VERSION_NO) VALUES ('AR_REF',1,NULL,CURRENT_DATE,1);
  INSERT INTO TB_ASTP_SEQ_GEN (SEQUENCE_NAME,SEQUENCE_VALUE,CREATE_BY,CREATE_TS,VERSION_NO) VALUES ('SMS_TXNREF',1,NULL,CURRENT_DATE,1);
  INSERT INTO TB_ASTP_SEQ_GEN (SEQUENCE_NAME,SEQUENCE_VALUE,CREATE_BY,CREATE_TS,VERSION_NO) VALUES ('USSD_TXNREF',1,NULL,CURRENT_DATE,1);
  INSERT INTO TB_ASTP_SEQ_GEN (SEQUENCE_NAME,SEQUENCE_VALUE,CREATE_BY,CREATE_TS,VERSION_NO) VALUES ('TXT_TXNREF',1,NULL,CURRENT_DATE,1);
  INSERT INTO TB_ASTP_SEQ_GEN (SEQUENCE_NAME,SEQUENCE_VALUE,CREATE_BY,CREATE_TS,VERSION_NO) VALUES ('SOURCE_MSG_ID',1,NULL,CURRENT_DATE,1);
  
  INSERT INTO TB_OS (OS_ID,CREATE_TS) VALUES ('ANDROID',CURRENT_DATE);
  INSERT INTO TB_OS (OS_ID,CREATE_TS) VALUES ('IOS',CURRENT_DATE);
  INSERT INTO TB_OS (OS_ID,CREATE_TS) VALUES ('WINDOWS',CURRENT_DATE);

DROP TABLE IF EXISTS TB_ASMI_SECURITY_PARAMETERS CASCADE;
CREATE TABLE TB_ASMI_SECURITY_PARAMETERS (
  APP_ID varchar(100) NOT NULL,
  MIN_NUM_NUM int DEFAULT NULL,
  MIN_NUM_SPCL_CHAR int DEFAULT NULL,
  MIN_NUM_UPPER_CASE_CHAR int DEFAULT NULL,
  MIN_LENGTH int DEFAULT NULL,
  MAX_LENGTH int DEFAULT NULL,
  PASS_CHANGE_FREQ int DEFAULT NULL,
  LAST_N_PASS_NOT_TO_USE int DEFAULT NULL,
  SESSION_TIMEOUT int DEFAULT NULL,
  NOOFFAILEDCOUNTS int DEFAULT NULL,
  CREATE_USER_ID varchar(100) DEFAULT NULL,
  CREATE_TS timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO int DEFAULT 1,
  SERVER_TOKEN varchar(255) DEFAULT NULL,
  FAIL_COUNT_TIMEOUT int DEFAULT NULL,
  PASSWORD_COUNT int DEFAULT NULL,
  DEFAULT_AUTHORIZATION char(1) DEFAULT 'Y',
  RESTRICT_SPL_CHARS varchar(100) DEFAULT NULL,
  /*
   * Below Fields Added by ripu
   * Appzillon - 3.1 - 65, 69 Start (for User creation extensibility and multifactor)
   */
  ALLOW_USER_PASSWORD_ENTRY VARCHAR(1) DEFAULT 'N',
  AUTO_APPROVE VARCHAR(1) DEFAULT 'Y',
  PWD_RSET_VALIDATE_PARAMS VARCHAR(45) DEFAULT 'BOTH',
  PWD_RSET_COMM_CHANNEL VARCHAR(45) DEFAULT 'BOTH',
  PWD_RSET_ACCEPT_USR_PWD VARCHAR(1) DEFAULT 'N',
  TXN_LOG_REQ VARCHAR(45) DEFAULT 'Y',
  MAKER_ID VARCHAR(45),
  MAKER_TS timestamp DEFAULT CURRENT_TIMESTAMP,
  CHECKER_ID VARCHAR(45),
  CHECKER_TS timestamp DEFAULT CURRENT_TIMESTAMP,
  PWD_COMM_CHANNEL VARCHAR(45) DEFAULT 'BOTH',
  AUTH_STATUS VARCHAR(45) DEFAULT 'U',
  MULTIPLE_SESSION_ALLOWED varchar(1) DEFAULT 'Y',
  TXN_LOG_PAYLOAD VARCHAR(1) DEFAULT 'Y',
  FMW_TXN_REQ VARCHAR(1) DEFAULT 'Y',
  /* Appzillon - 3.1 - 65, 69 End*/
  /*
   * Below Fields Added by sasidhar
   * Appzillon - for otp resend(yes,no) and otp type(numeric,string,aplhanumeric)
   */
   OTP_LENGTH int DEFAULT NULL,
   OTP_VALIDATION_COUNT int DEFAULT NULL,
   OTP_EXPIRY int DEFAULT NULL,
   OTP_RESEND varchar(10) DEFAULT NULL,
   OTP_FORMAT varchar(20) DEFAULT NULL,
   OTP_RESEND_COUNT int DEFAULT NULL ,
   OTP_RESEND_LOCK_TIMEOUT int DEFAULT NULL ,
   PWD_CHANGE_COMM_CHANNEL varchar(30) DEFAULT 'BOTH',
   PASSWORD_ON_AUTHORIZATION VARCHAR(1) DEFAULT 'N',
   DATA_INTEGRITY VARCHAR(1) DEFAULT 'Y',
   /* changes end */
  PRIMARY KEY (APP_ID)
);

DROP TABLE IF EXISTS TB_ASLG_JMS_REQ_RESP CASCADE;
CREATE TABLE TB_ASLG_JMS_REQ_RESP (
  TRANS_ID int NOT NULL,
  INTERFACE_ID varchar(150) NOT NULL,
  APP_ID varchar(100) NOT NULL,
  REQ_TYPE varchar(150) NOT NULL,
  RES_TYPE varchar(150) NOT NULL,
  SENT_DATE TIMESTAMP NOT NULL,
  RECEIVED_DATE TIMESTAMP DEFAULT NULL,
  MSG_ID varchar(250) NOT NULL,
  REQ_Q varchar(250) DEFAULT NULL,
  RESP_Q varchar(250) DEFAULT NULL,
  MSG_STATUS int NOT NULL,
  MSG_SENT text NOT NULL,
  MSG_RECEIVED text,
  RESP_DESC varchar(250) DEFAULT NULL,
  PRIMARY KEY (TRANS_ID),
  UNIQUE (MSG_ID)
) ;
DROP TABLE IF EXISTS TB_ASHS_USER_PASSWORDS CASCADE;
CREATE TABLE TB_ASHS_USER_PASSWORDS (
  USER_ID varchar(100) NOT NULL,
  APP_ID varchar(100) NOT NULL,
  PIN varchar(255) NOT NULL,
  CHANGE_TIME timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATE_USER_ID varchar(100) DEFAULT NULL,
  CREATE_TS timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO int DEFAULT 1,
  PRIMARY KEY (USER_ID,APP_ID,PIN)
 ) ;
 DROP TABLE IF EXISTS TB_ASLG_TXN_DETAIL CASCADE;
CREATE TABLE TB_ASLG_TXN_DETAIL (
  TXN_REF varchar(255) NOT NULL,
  USER_ID varchar(100) DEFAULT NULL,
  USER_APP_ID varchar(100) DEFAULT NULL,
  APP_USER_ID varchar(100) DEFAULT NULL,
  SESSION_ID varchar(255) DEFAULT NULL,
  LGN_REF varchar(200) DEFAULT NULL,
  DEVICE_ID varchar(255) DEFAULT NULL,
  EXT_SY_CODE varchar(20) DEFAULT NULL,
  EXT_TXN_REF varchar(20) DEFAULT NULL,
  ST_TM timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  END_TM timestamp DEFAULT CURRENT_TIMESTAMP,
  INTERFACE_ID varchar(50) DEFAULT NULL,
  APP_ID varchar(100) DEFAULT NULL,
  TXN_STAT varchar(20) DEFAULT NULL,
  REC_STAT varchar(20) DEFAULT NULL,
  TXN_REQ text,
  TXN_RESP text,
  EXT_TXN_REQ text,
  EXT_TXN_RESP text,
  INFO1 text DEFAULT NULL,
  INFO2 text DEFAULT NULL,
  INFO3 text DEFAULT NULL,
  INFO4 text DEFAULT NULL,
  INFO5 text DEFAULT NULL,
  CREATE_BY varchar(200) DEFAULT NULL,
  SOURCE VARCHAR(255),
  LONGITUDE VARCHAR(255),
  LATITUDE VARCHAR(255),
  SUBLOCALITY VARCHAR(255),
  ADMIN_AREA_LVL_1 VARCHAR(255),
  ADMIN_AREA_LVL_2 VARCHAR(255),
  COUNTRY VARCHAR(255),
  FORMATTED_ADDRESS VARCHAR(255),
  EXT_ST_TM timestamp DEFAULT NULL,
  EXT_END_TM timestamp  DEFAULT NULL,
  CREATE_TS timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, 
  ORIGINATION VARCHAR(255),
  STATUS VARCHAR(255),
  PRIMARY KEY (TXN_REF) 
) ;

DROP TABLE IF EXISTS TB_ASLG_FMW_TXN_DETAIL CASCADE;
CREATE TABLE TB_ASLG_FMW_TXN_DETAIL (
  TXN_REF varchar(255) NOT NULL,
  MASTER_TXN_REF varchar(255),
  INTERFACE_ID varchar(50) DEFAULT NULL,
  REQ_PAYLOAD text,
  RES_PAYLOAD text,
  ENDPOINT_TYPE varchar(255),
  ST_TM timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  END_TM timestamp DEFAULT CURRENT_TIMESTAMP,
  STATUS VARCHAR(255),
  CREATE_TS timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (TXN_REF)
) ;


DROP TABLE IF EXISTS TB_ASMI_INTF_MASTER CASCADE;
CREATE TABLE TB_ASMI_INTF_MASTER (
  INTERFACE_ID varchar(100) NOT NULL,
  APP_ID varchar(100) NOT NULL,
  CATEGORY varchar(30) DEFAULT NULL,
  TYPE varchar(30) DEFAULT NULL,
  DESCRIPTION varchar(100) DEFAULT NULL,
  AUTHRZ_REQ varchar(1) DEFAULT 'Y',
  CREATE_USER_ID varchar(100) DEFAULT NULL,
  CREATE_TS timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO int DEFAULT 1,
  MAKER_ID VARCHAR(45),
  MAKER_TS timestamp DEFAULT CURRENT_TIMESTAMP,
  CHECKER_ID VARCHAR(45),
  CHECKER_TS timestamp DEFAULT CURRENT_TIMESTAMP,
  AUTH_STATUS VARCHAR(45) DEFAULT 'U',
  CAPTCHA_REQ VARCHAR(1) DEFAULT 'N',
  INTERFACE_DEF text DEFAULT NULL,
  DG_TXN_LOG_REQ VARCHAR(1) DEFAULT 'Y',
  PRIMARY KEY (INTERFACE_ID,APP_ID)
 ) ;
DROP TABLE IF EXISTS TB_ASMI_ROLE_INTF CASCADE;
CREATE TABLE TB_ASMI_ROLE_INTF (
  APP_ID varchar(100) NOT NULL,
  ROLE_ID varchar(100) NOT NULL,
  INTERFACE_ID varchar(100) NOT NULL,
  CREATE_USER_ID varchar(100) DEFAULT NULL,
  CREATE_TS timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO int DEFAULT 1,
  PRIMARY KEY (APP_ID,ROLE_ID,INTERFACE_ID)
) ;

DROP TABLE IF EXISTS TB_ASMI_ROLE_MASTER CASCADE;
CREATE TABLE TB_ASMI_ROLE_MASTER (
  ROLE_ID varchar(255) NOT NULL,
  APP_ID varchar(100) NOT NULL,
  ROLE_DESC varchar(255) DEFAULT NULL,
  INTERFACE_ALLOWED varchar(1) DEFAULT 'A',
  SCREEN_ALLOWED varchar(1) DEFAULT 'A',
  CONTROL_ALLOWED varchar(1) DEFAULT 'A',
  CREATE_USER_ID varchar(100) DEFAULT NULL,
  CREATE_TS timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO int DEFAULT 1,
  MAKER_ID VARCHAR(45),
  MAKER_TS timestamp DEFAULT CURRENT_TIMESTAMP,
  CHECKER_ID VARCHAR(45),
  CHECKER_TS timestamp DEFAULT CURRENT_TIMESTAMP,
  AUTH_STATUS VARCHAR(45) DEFAULT 'U',
  PRIMARY KEY (ROLE_ID,APP_ID) 
) ;

DROP TABLE IF EXISTS TB_ASMI_ROLE_SCR CASCADE;
CREATE TABLE TB_ASMI_ROLE_SCR (
  APP_ID varchar(100) NOT NULL,
  SCREEN_ID varchar(100) NOT NULL,
  ROLE_ID varchar(100) NOT NULL,
  CREATE_USER_ID varchar(100) DEFAULT NULL,
  CREATE_TS timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO int DEFAULT 1,
  PRIMARY KEY (APP_ID,ROLE_ID,SCREEN_ID) 
);

DROP TABLE IF EXISTS TB_ASMI_SCR_MASTER CASCADE;
CREATE TABLE TB_ASMI_SCR_MASTER (
  SCREEN_ID varchar(255) NOT NULL,
  APP_ID varchar(100) NOT NULL,
  SCREEN_DESC varchar(255) DEFAULT NULL,
  CREATE_USER_ID varchar(100) DEFAULT NULL,
  CREATE_TS timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO int DEFAULT 1,
  MAKER_ID VARCHAR(45),
  MAKER_TS timestamp DEFAULT CURRENT_TIMESTAMP,
  CHECKER_ID VARCHAR(45),
  CHECKER_TS timestamp DEFAULT CURRENT_TIMESTAMP,
  AUTH_STATUS VARCHAR(45) DEFAULT 'U',
  SCREEN_TYPE VARCHAR(10) DEFAULT NULL,
  SCREEN_NAME VARCHAR(100) DEFAULT NULL,
  SCREEN_ICON VARCHAR,
  CUSTOMISABLE VARCHAR(1) DEFAULT NULL,
  PRIMARY KEY (SCREEN_ID,APP_ID)
 ) ;
DROP TABLE IF EXISTS TB_ASMI_USER CASCADE;
CREATE TABLE TB_ASMI_USER (
  USER_ID varchar(100) NOT NULL,
  APP_ID varchar(100) NOT NULL,
  PIN varchar(300) DEFAULT NULL,
  USER_NAME varchar(100) DEFAULT NULL,
  LOGIN_STATUS varchar(3) NOT NULL,
  FAIL_COUNT int DEFAULT NULL,
  USER_ACTIVE varchar(3) DEFAULT 'Y',
  USER_LOCKED varchar(3) DEFAULT 'N',
  LANGUAGE varchar(2) DEFAULT 'en',
  EXTERNALIDENTIFIER varchar(30) DEFAULT NULL,
  USER_ADDR1 varchar(50) DEFAULT NULL,
  USER_ADDR2 varchar(50) DEFAULT NULL,
  USER_ADDR3 varchar(50) DEFAULT NULL,
  USER_ADDR4 varchar(50) DEFAULT NULL,
  USER_EML1 varchar(50) DEFAULT NULL,
  USER_EML2 varchar(50) DEFAULT NULL,
  USER_PHNO1 varchar(20) DEFAULT NULL,
  USER_PHNO2 varchar(20) DEFAULT NULL,
  USER_LVL int DEFAULT NULL,
  USER_LOCK_TS timestamp NULL DEFAULT NULL,
  PIN_CHANGE_TS timestamp NULL DEFAULT NULL,
  PROFILE_PIC VARCHAR,
  CREATE_USER_ID varchar(100) DEFAULT NULL,
  CREATE_TS timestamp DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO int DEFAULT 1,
  MAKER_ID VARCHAR(45),
  MAKER_TS timestamp DEFAULT CURRENT_TIMESTAMP,
  CHECKER_ID VARCHAR(45),
  DATE_OF_BIRTH DATE,
  CHECKER_TS timestamp DEFAULT CURRENT_TIMESTAMP,
  AUTH_STATUS VARCHAR(45) DEFAULT 'U',
  ADD_INFO1 VARCHAR(255),
  ADD_INFO2 VARCHAR(255),
  ADD_INFO3 VARCHAR(255),
  ADD_INFO4 VARCHAR(255),
  ADD_INFO5 VARCHAR(255),
  PRIMARY KEY (USER_ID,APP_ID)
) ;

DROP TABLE IF EXISTS TB_ASMI_USER_DEVICES CASCADE;
CREATE TABLE TB_ASMI_USER_DEVICES (
  APP_ID varchar(100) NOT NULL,
  DEVICE_ID varchar(250) NOT NULL,
  USER_ID varchar(100) NOT NULL,
  DEVICE_STATUS varchar(100) DEFAULT NULL,
  CREATE_USER_ID varchar(100) DEFAULT NULL,
  CREATE_TS timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO int DEFAULT 1,
  MAKER_ID VARCHAR(45),
  MAKER_TS timestamp DEFAULT CURRENT_TIMESTAMP,
  CHECKER_ID VARCHAR(45),
  CHECKER_TS timestamp DEFAULT CURRENT_TIMESTAMP,
  AUTH_STATUS VARCHAR(45) DEFAULT 'U',
  PRIMARY KEY (APP_ID,DEVICE_ID,USER_ID)
 ) ;

 DROP TABLE IF EXISTS TB_ASMI_USER_ROLE CASCADE;
CREATE TABLE TB_ASMI_USER_ROLE (
  USER_ID varchar(100) NOT NULL,
  ROLE_ID varchar(100) NOT NULL,
  APP_ID varchar(100) NOT NULL,
  CREATE_USER_ID varchar(100) DEFAULT NULL,
  CREATE_TS timestamp DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO int DEFAULT 1,
  PRIMARY KEY (USER_ID,ROLE_ID,APP_ID)
 ) ;
DROP TABLE IF EXISTS TB_ASTP_LAST_LOGIN CASCADE;
CREATE TABLE TB_ASTP_LAST_LOGIN (
  USER_ID varchar(100) NOT NULL,
  APP_ID varchar(100) NOT NULL,
  DEVICE_ID varchar(255) NOT NULL,
  REQUEST_KEY varchar(255) DEFAULT NULL,
  SESSION_ID varchar(255) DEFAULT NULL,
  LAST_REQ_TIME timestamp NULL DEFAULT NULL,
  LOGIN_TIME timestamp NULL DEFAULT NULL,
  CREATE_TS timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO int DEFAULT 1,
  OTP varchar(200) DEFAULT NULL,
  OTP_GENERATION_TIME timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  OTP_STATUS varchar(1) DEFAULT NULL,
  LONGITUDE VARCHAR(255),
  LATITUDE VARCHAR(255),
  SUBLOCALITY VARCHAR(255),
  ADMIN_AREA_LVL_1 VARCHAR(255),
  ADMIN_AREA_LVL_2 VARCHAR(255),
  COUNTRY VARCHAR(255),
  FORMATTED_ADDRESS VARCHAR(255),
  ORIGINATION VARCHAR(255),
  PRIMARY KEY (USER_ID,APP_ID,DEVICE_ID)
 ) ;
DROP TABLE IF EXISTS TB_ASMI_DEVICE_MASTER CASCADE;
CREATE TABLE TB_ASMI_DEVICE_MASTER(
  APP_ID VARCHAR(100) NOT NULL,
  DEVICE_ID VARCHAR(200) NOT NULL,
  OS VARCHAR(20) NULL,
  OS_VERSION VARCHAR(50) NULL,
  MOBILE_NUMBER1 VARCHAR(20) NULL,
  MOBILE_NUMBER2 VARCHAR(20) NULL,
  MODEL VARCHAR(100) NULL,
  MAKE VARCHAR(100) NULL,
  SCREEN_RESOLUTION VARCHAR(100) NULL,
  WIPED_OUT VARCHAR(1) DEFAULT 'N',
  CREATE_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  DEVICE_NAME VARCHAR(100) NULL,
  LONGITUDE VARCHAR(100) NULL,
  LATITUDE VARCHAR(100) NULL,
  CONSTRAINT TB_ASMI_DEVICE_MASTER_PK PRIMARY KEY (APP_ID, DEVICE_ID)
);
   DROP TABLE IF EXISTS TB_ASLG_AUDIT_LOG CASCADE;
    CREATE TABLE TB_ASLG_AUDIT_LOG
  (
    ACCESS_REF     VARCHAR(255) NOT NULL,
    APP_ID         VARCHAR(100)  NULL,
    USER_ID        VARCHAR(100) NULL,
    DEVICE_ID      VARCHAR(250)  NULL,
    SESSION_ID     VARCHAR(100) NULL,
    ACTION         VARCHAR(30) NULL,
    START_TIME_STAMP VARCHAR(30) NULL,
    END_TIME_STAMP VARCHAR(30) NULL,
    FIELD1         VARCHAR(100) NULL,
    FIELD2         VARCHAR(100) NULL,
    FIELD3         VARCHAR(100) NULL,
    FIELD4         VARCHAR(100) NULL,
    FIELD5         VARCHAR(100) NULL,
    CREATE_DATE DATE DEFAULT null,
    CREATE_USER_ID VARCHAR(100) NULL,
    VERSION_NO int DEFAULT 1,
    CONSTRAINT PK_TB_ASLG_AUDIT_LOG PRIMARY KEY ( ACCESS_REF  )
  );
  /* Appzillon - 3.1 - Audit Log End */
  
  /*
   * Changes done by Ripu on (10-Feb-2015)
   * Appzillon - 3.1 - Send SMS to User Start
   */
  
   DROP TABLE IF EXISTS TB_ASMI_SMS_USER CASCADE;
 CREATE TABLE TB_ASMI_SMS_USER(
  APP_ID VARCHAR(100) NOT NULL,
  USER_ID VARCHAR(100) NOT NULL,
  MOBILE_NUMBER VARCHAR(20),
  CREATED_BY VARCHAR(50), 
  CREATE_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP, 
  VERSION_NO int DEFAULT 1, 
  SMS_REQ VARCHAR(1),
  USSD_REQ VARCHAR(1),
  CONSTRAINT TB_ASMI_SMS_USER_PK PRIMARY KEY(APP_ID, USER_ID)
);
DROP TABLE IF EXISTS TB_ASLG_SMS_TXN CASCADE;
CREATE TABLE TB_ASLG_SMS_TXN 
   (           
                SMS_TXNREF VARCHAR(255) NOT NULL,
                APP_ID VARCHAR(100),
                MOBILE_NUMBER VARCHAR(13), 
                REQUEST VARCHAR(4000),
                MESSAGE_ID VARCHAR(20), 
                ORIGINATION VARCHAR(20), 
                START_TM TIMESTAMP(0), 
        RESPONSE VARCHAR(4000),
        END_TM TIMESTAMP(0), 
                CREATED_BY VARCHAR(20), 
                CREATE_TS TIMESTAMP(0) DEFAULT CURRENT_TIMESTAMP,
                PRIMARY KEY (SMS_TXNREF) 
   ) ;
   
   DROP TABLE IF EXISTS TB_ASLG_USSD_TXN CASCADE;
   CREATE TABLE TB_ASLG_USSD_TXN 
   (           
                USSD_TXNREF VARCHAR(255) NOT NULL,
                APP_ID VARCHAR(100),
                MOBILE_NUMBER VARCHAR(13),
                REQUEST VARCHAR(200), 
                ACTION VARCHAR(3000),
                STEP VARCHAR(100),
                ORIGINATION VARCHAR(20), 
                START_TM TIMESTAMP(0), 
                RESPONSE VARCHAR(200),
                END_TM TIMESTAMP(0),
                CREATED_BY VARCHAR(20), 
                CREATE_TS TIMESTAMP(0) DEFAULT CURRENT_TIMESTAMP,
                PRIMARY KEY (USSD_TXNREF) 
   ) ;
   
   DROP TABLE IF EXISTS TB_ASLG_TXT_MSLG_LOG CASCADE;
   CREATE TABLE TB_ASLG_TXT_MSLG_LOG 
   (           
                TXT_TXNREF VARCHAR(255) NOT NULL, 
                APP_ID VARCHAR(100),
                MOBILE_NUMBER VARCHAR(13),
                REQUEST VARCHAR(200), 
                PORT VARCHAR(10),
                ORIGINATION VARCHAR(20), 
                START_TM TIMESTAMP(0), 
                RESPONSE VARCHAR(200),
                END_TM TIMESTAMP(0),
                CREATED_BY VARCHAR(20), 
                CREATE_TS TIMESTAMP(0) DEFAULT CURRENT_TIMESTAMP,
                PRIMARY KEY (TXT_TXNREF) 
   ) ;
   
DROP table IF EXISTS TB_ASMI_CONTROLS_MASTER CASCADE;
CREATE TABLE TB_ASMI_CONTROLS_MASTER (
   APP_ID varchar(100) NOT NULL,
   CONTROL_ID varchar(255) NOT NULL,
   CONTROL_DESC varchar(255) DEFAULT NULL,
   CREATED_BY varchar(100) DEFAULT NULL,
   CREATED_TS timestamp NULL DEFAULT CURRENT_TIMESTAMP,
   MAKER_ID varchar(45),
   MAKER_TS timestamp DEFAULT CURRENT_TIMESTAMP,
   CHECKER_ID varchar(45),
   CHECKER_TS timestamp DEFAULT CURRENT_TIMESTAMP,
   AUTH_STATUS varchar(45) DEFAULT 'U',
   VERSION_NO int DEFAULT 1,
   PRIMARY KEY (APP_ID,CONTROL_ID)
  ) ;

DROP table IF EXISTS TB_ASMI_ROLE_CONTROLS CASCADE;
CREATE TABLE TB_ASMI_ROLE_CONTROLS (
   APP_ID varchar(100) NOT NULL,
   ROLE_ID varchar(100) NOT NULL,
   CONTROL_ID varchar(100) NOT NULL,
   CREATED_BY varchar(100) DEFAULT NULL,
   CREATED_TS timestamp DEFAULT CURRENT_TIMESTAMP,
   VERSION_NO int DEFAULT 1,
   PRIMARY KEY (APP_ID,ROLE_ID,CONTROL_ID)
) ;

DROP TABLE IF EXISTS TB_ASHS_SECURITY_PARAMETERS CASCADE;
CREATE TABLE TB_ASHS_SECURITY_PARAMETERS (
  APP_ID varchar(100) NOT NULL,
  MIN_NUM_NUM int DEFAULT NULL,
  MIN_NUM_SPCL_CHAR int DEFAULT NULL,
  MIN_NUM_UPPER_CASE_CHAR int DEFAULT NULL,
  MIN_LENGTH int DEFAULT NULL,
  MAX_LENGTH int DEFAULT NULL,
  PASS_CHANGE_FREQ int DEFAULT NULL,
  LAST_N_PASS_NOT_TO_USE int DEFAULT NULL,
  SESSION_TIMEOUT int DEFAULT NULL,
  NOOFFAILEDCOUNTS int DEFAULT NULL,
  CREATE_USER_ID varchar(100) DEFAULT NULL,
  CREATE_TS timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO int DEFAULT 1,
  SERVER_TOKEN varchar(255) DEFAULT NULL,
  FAIL_COUNT_TIMEOUT int DEFAULT NULL,
  PASSWORD_COUNT int DEFAULT NULL,
  DEFAULT_AUTHORIZATION char(1) DEFAULT 'Y',
  RESTRICT_SPL_CHARS varchar(100) DEFAULT NULL,
  /*
   * Below Fields Added by ripu
   * Appzillon - 3.1 - 65, 69 Start (for User creation extensibility and multifactor)
   */
  ALLOW_USER_PASSWORD_ENTRY VARCHAR(1) DEFAULT 'N',
  AUTO_APPROVE VARCHAR(1) DEFAULT 'Y',
  PWD_RSET_VALIDATE_PARAMS VARCHAR(45) DEFAULT 'BOTH',
  PWD_RSET_COMM_CHANNEL VARCHAR(45) DEFAULT 'BOTH',
  PWD_RSET_ACCEPT_USR_PWD VARCHAR(1) DEFAULT 'N',
  TXN_LOG_REQ VARCHAR(45) DEFAULT 'Y',
  MAKER_ID VARCHAR(45),
  MAKER_TS timestamp DEFAULT CURRENT_TIMESTAMP,
  CHECKER_ID VARCHAR(45),
  CHECKER_TS timestamp DEFAULT CURRENT_TIMESTAMP,
  PWD_COMM_CHANNEL VARCHAR(45) DEFAULT 'BOTH',
  AUTH_STATUS VARCHAR(45) DEFAULT 'U',
  MULTIPLE_SESSION_ALLOWED varchar(1) DEFAULT 'Y',
  TXN_LOG_PAYLOAD VARCHAR(1) DEFAULT 'Y',
  /* Appzillon - 3.1 - 65, 69 End*/
  /*
   * Below Fields Added by sasidhar
   * Appzillon - for otp resend(yes,no) and otp type(numeric,string,aplhanumeric)
   */
   OTP_LENGTH int DEFAULT NULL,
   OTP_VALIDATION_COUNT int DEFAULT NULL,
   OTP_EXPIRY int DEFAULT NULL,
   OTP_RESEND varchar(10) DEFAULT NULL,
   OTP_FORMAT varchar(20) DEFAULT NULL,
   OTP_RESEND_COUNT int DEFAULT NULL ,
   OTP_RESEND_LOCK_TIMEOUT int DEFAULT NULL ,
   PWD_CHANGE_COMM_CHANNEL varchar(30) DEFAULT 'BOTH',
   PASSWORD_ON_AUTHORIZATION VARCHAR(1) DEFAULT 'N',
   DATA_INTEGRITY VARCHAR(1) DEFAULT 'Y',
   /* changes end */
  PRIMARY KEY (APP_ID,VERSION_NO)
);
DROP TABLE IF EXISTS TB_ASHS_ROLE_INTF CASCADE;
CREATE TABLE TB_ASHS_ROLE_INTF (
  APP_ID varchar(100) NOT NULL,
  ROLE_ID varchar(100) NOT NULL,
  INTERFACE_ID varchar(100) NOT NULL,
  CREATE_USER_ID varchar(100) DEFAULT NULL,
  CREATE_TS timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO int DEFAULT 1,
  PRIMARY KEY (APP_ID,ROLE_ID,INTERFACE_ID,VERSION_NO)
) ;

DROP TABLE IF EXISTS TB_ASHS_ROLE_MASTER CASCADE;
CREATE TABLE TB_ASHS_ROLE_MASTER (
  ROLE_ID varchar(255) NOT NULL,
  APP_ID varchar(100) NOT NULL,
  ROLE_DESC varchar(255) DEFAULT NULL,
  INTERFACE_ALLOWED varchar(1) DEFAULT 'A',
  SCREEN_ALLOWED varchar(1) DEFAULT 'A',
  CONTROL_ALLOWED varchar(1) DEFAULT 'A',
  CREATE_USER_ID varchar(100) DEFAULT NULL,
  CREATE_TS timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO int DEFAULT 1,
  MAKER_ID VARCHAR(45),
  MAKER_TS timestamp DEFAULT CURRENT_TIMESTAMP,
  CHECKER_ID VARCHAR(45),
  CHECKER_TS timestamp DEFAULT CURRENT_TIMESTAMP,
  AUTH_STATUS VARCHAR(45) DEFAULT 'U',
  PRIMARY KEY (ROLE_ID,APP_ID,VERSION_NO) 
) ;

DROP TABLE IF EXISTS TB_ASHS_ROLE_SCR CASCADE;
CREATE TABLE TB_ASHS_ROLE_SCR (
  APP_ID varchar(100) NOT NULL,
  SCREEN_ID varchar(100) NOT NULL,
  ROLE_ID varchar(100) NOT NULL,
  CREATE_USER_ID varchar(100) DEFAULT NULL,
  CREATE_TS timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO int DEFAULT 1,
  PRIMARY KEY (APP_ID,ROLE_ID,SCREEN_ID,VERSION_NO) 
);

DROP TABLE IF EXISTS TB_ASHS_USER CASCADE;
CREATE TABLE TB_ASHS_USER (
  USER_ID varchar(100) NOT NULL,
  APP_ID varchar(100) NOT NULL,
  PIN varchar(300) DEFAULT NULL,
  USER_NAME varchar(100) DEFAULT NULL,
  LOGIN_STATUS varchar(3) NOT NULL,
  FAIL_COUNT int DEFAULT NULL,
  USER_ACTIVE varchar(3) DEFAULT 'Y',
  USER_LOCKED varchar(3) DEFAULT 'N',
  LANGUAGE varchar(2) DEFAULT 'en',
  EXTERNALIDENTIFIER varchar(30) DEFAULT NULL,
  USER_ADDR1 varchar(50) DEFAULT NULL,
  USER_ADDR2 varchar(50) DEFAULT NULL,
  USER_ADDR3 varchar(50) DEFAULT NULL,
  USER_ADDR4 varchar(50) DEFAULT NULL,
  USER_EML1 varchar(50) DEFAULT NULL,
  USER_EML2 varchar(50) DEFAULT NULL,
  USER_PHNO1 varchar(20) DEFAULT NULL,
  USER_PHNO2 varchar(20) DEFAULT NULL,
  USER_LVL int DEFAULT NULL,
  USER_LOCK_TS timestamp NULL DEFAULT NULL,
  PIN_CHANGE_TS timestamp NULL DEFAULT NULL,
  PROFILE_PIC VARCHAR,
  CREATE_USER_ID varchar(100) DEFAULT NULL,
  CREATE_TS timestamp DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO int DEFAULT 1,
  MAKER_ID VARCHAR(45),
  MAKER_TS timestamp DEFAULT CURRENT_TIMESTAMP,
  CHECKER_ID VARCHAR(45),
  DATE_OF_BIRTH DATE,
  CHECKER_TS timestamp DEFAULT CURRENT_TIMESTAMP,
  AUTH_STATUS VARCHAR(45) DEFAULT 'U',
  ADD_INFO1 VARCHAR(255),
  ADD_INFO2 VARCHAR(255),
  ADD_INFO3 VARCHAR(255),
  ADD_INFO4 VARCHAR(255),
  ADD_INFO5 VARCHAR(255),
  PRIMARY KEY (USER_ID,APP_ID,VERSION_NO)
) ;

DROP TABLE IF EXISTS TB_ASHS_USER_DEVICES CASCADE;
CREATE TABLE TB_ASHS_USER_DEVICES (
  APP_ID varchar(100) NOT NULL,
  DEVICE_ID varchar(250) NOT NULL,
  USER_ID varchar(100) NOT NULL,
  DEVICE_STATUS varchar(100) DEFAULT NULL,
  CREATE_USER_ID varchar(100) DEFAULT NULL,
  CREATE_TS timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO int DEFAULT 1,
  MAKER_ID VARCHAR(45),
  MAKER_TS timestamp DEFAULT CURRENT_TIMESTAMP,
  CHECKER_ID VARCHAR(45),
  CHECKER_TS timestamp DEFAULT CURRENT_TIMESTAMP,
  AUTH_STATUS VARCHAR(45) DEFAULT 'U',
  PRIMARY KEY (APP_ID,DEVICE_ID,USER_ID,VERSION_NO)
 ) ;

 DROP TABLE IF EXISTS TB_ASHS_USER_ROLE CASCADE;
CREATE TABLE TB_ASHS_USER_ROLE (
  USER_ID varchar(100) NOT NULL,
  ROLE_ID varchar(100) NOT NULL,
  APP_ID varchar(100) NOT NULL,
  CREATE_USER_ID varchar(100) DEFAULT NULL,
  CREATE_TS timestamp DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO int DEFAULT 1,
  PRIMARY KEY (USER_ID,ROLE_ID,APP_ID,VERSION_NO)
 ) ;
 DROP TABLE IF EXISTS TB_ASHS_SMS_USER CASCADE;
 CREATE TABLE TB_ASHS_SMS_USER(
  APP_ID VARCHAR(100) NOT NULL,
  MOBILE_NUMBER VARCHAR(20),
  USER_ID VARCHAR(100) NOT NULL,
  CREATED_BY VARCHAR(50), 
  CREATE_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP, 
  VERSION_NO int DEFAULT 1, 
  SMS_REQ VARCHAR(1),
  USSD_REQ VARCHAR(1),
  CONSTRAINT TB_ASHS_SMS_USER_PK PRIMARY KEY(APP_ID, USER_ID,VERSION_NO)
);
DROP table IF EXISTS TB_ASHS_ROLE_CONTROLS CASCADE;
CREATE TABLE TB_ASHS_ROLE_CONTROLS (
   APP_ID varchar(100) NOT NULL,
   ROLE_ID varchar(100) NOT NULL,
   CONTROL_ID varchar(100) NOT NULL,
   CREATED_BY varchar(100) DEFAULT NULL,
   CREATED_TS timestamp DEFAULT CURRENT_TIMESTAMP,
   VERSION_NO int DEFAULT 1,
   PRIMARY KEY (APP_ID,ROLE_ID,CONTROL_ID,VERSION_NO)
) ;


DROP TABLE IF EXISTS TB_ASMI_USER_APP_ACCESS CASCADE;
CREATE TABLE TB_ASMI_USER_APP_ACCESS (
  APP_ID VARCHAR(100) NOT NULL,
  USER_ID VARCHAR(100) NOT NULL,
  ALLOWED_APP_ID VARCHAR(100) NOT NULL,
  APP_ACCESS VARCHAR(1) DEFAULT 'D',
  CREATE_USER_ID VARCHAR(100) DEFAULT NULL,
  CREATE_TS TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO INT DEFAULT 1,
  CONSTRAINT TB_ASMI_USER_APP_ACCESS_PK PRIMARY KEY (APP_ID, USER_ID, ALLOWED_APP_ID)
 ) ;
 
 DROP TABLE IF EXISTS TB_ASHS_USER_APP_ACCESS CASCADE;
CREATE TABLE TB_ASHS_USER_APP_ACCESS (
  APP_ID VARCHAR(100) NOT NULL,
  USER_ID VARCHAR(100) NOT NULL,
  ALLOWED_APP_ID VARCHAR(100) NOT NULL,
  APP_ACCESS VARCHAR(1) DEFAULT 'D',
  CREATE_USER_ID VARCHAR(100) DEFAULT NULL,
  CREATE_TS TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO INT DEFAULT 1,
  CONSTRAINT TB_ASHS_USER_APP_ACCESS_PK PRIMARY KEY (APP_ID, USER_ID, ALLOWED_APP_ID,VERSION_NO)
 ) ;
 
 DROP TABLE IF EXISTS TB_ASMI_APP_MASTER CASCADE;
   CREATE TABLE TB_ASMI_APP_MASTER 
   (  
  APP_ID VARCHAR(100) NOT NULL,
  PARENT_APPID VARCHAR(100) NULL,
  APP_NAME VARCHAR(100) NOT NULL,
    CONTAINER_APP VARCHAR(1),
    OTA_REQ VARCHAR(1),
  REMOTE_DEBUG VARCHAR(1), 
  EXPIRY_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  APP_DESCRIPTION VARCHAR(200),
  DEFAULT_LANGUAGE VARCHAR(20),
  CREATE_USER_ID VARCHAR(20), 
  CREATE_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP, 
  VERSION_NO int DEFAULT 1,
    BASE_APP VARCHAR(1),
    MICRO_APP_TYPE VARCHAR(10),
    PRIMARY_MICRO_APP VARCHAR(1) DEFAULT 'N',
    APP_ICON VARCHAR,
    APP_VERSION VARCHAR(20) NOT NULL,
    IDE_VERSION VARCHAR(20) NOT NULL,
    MAKER_ID VARCHAR(45),
	MAKER_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	CHECKER_ID VARCHAR(45),
	CHECKER_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	AUTH_STATUS VARCHAR(45) DEFAULT 'U',
	WELCOME_MSG VARCHAR(255),
  CONSTRAINT TB_ASMI_APP_MASTER_PK PRIMARY KEY (APP_ID)
   ) ;
   
    DROP TABLE IF EXISTS TB_ASNF_APP_OS_NOTIF_CODE CASCADE;
     CREATE TABLE TB_ASNF_APP_OS_NOTIF_CODE(
     APP_ID VARCHAR(100) NOT NULL,
     OS_ID VARCHAR(45),
     NOTIF_CODE VARCHAR(255),
     ACTION_CODE VARCHAR(255),
     ACTION_DISPLAY VARCHAR(255),
     CREATE_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP, 
   CONSTRAINT TB_ASNF_APP_OS_NOTIF_CODE_PK PRIMARY KEY(APP_ID, OS_ID, NOTIF_CODE,ACTION_CODE)
   );


DROP TABLE IF EXISTS TB_ASMI_DEVICE_GRPS CASCADE;

CREATE TABLE TB_ASMI_DEVICE_GRPS (
  APP_ID VARCHAR(100) NOT NULL,
  DEVICE_GROUP_ID VARCHAR(100) NOT NULL,
  DEVICE_GROUP_DESCRIPTION VARCHAR(1000) NOT NULL,
  OS VARCHAR(10) NOT NULL,
  HEIGHT int NOT NULL,
  WIDTH int NOT NULL,
  ORIENTATION_LOCK VARCHAR(10) DEFAULT NULL,
  PRIMARY KEY (APP_ID,DEVICE_GROUP_ID)
) ;



DROP TABLE IF EXISTS TB_ASMI_SCREEN_LAYOUTS CASCADE;
CREATE TABLE TB_ASMI_SCREEN_LAYOUTS (
  APP_ID VARCHAR(6) NOT NULL,
  SCREEN_ID VARCHAR(100) NOT NULL,
  LAYOUT_ID VARCHAR(100) NOT NULL,
  LAYOUT_NAME VARCHAR(100) NOT NULL,
  LAYOUT_ICON VARCHAR,
  DEFAULT_TEMPLATE VARCHAR(100) NOT NULL,
  PRIMARY KEY (APP_ID,SCREEN_ID,LAYOUT_ID)
) ;

DROP TABLE IF EXISTS TB_ASMI_SCREEN_MICRO_APP CASCADE;

CREATE TABLE TB_ASMI_SCREEN_MICRO_APP (
  APP_ID VARCHAR(6) NOT NULL,
  SCREEN_ID VARCHAR(100) NOT NULL,
  MICRO_APP_ID VARCHAR(6) NOT NULL,
  CREATE_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (APP_ID,SCREEN_ID,MICRO_APP_ID)
) ;

DROP TABLE IF EXISTS TB_ASMI_SCREEN_WIDGETS CASCADE;

CREATE TABLE TB_ASMI_SCREEN_WIDGETS (
  APP_ID VARCHAR(100) NOT NULL,
  SCREEN_ID VARCHAR(100) NOT NULL,
  CALLFORM_ID VARCHAR(100) NOT NULL,
  CREATE_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (APP_ID,SCREEN_ID,CALLFORM_ID)
) ;


DROP TABLE IF EXISTS TB_ASMI_DESIGN_OBJECTS CASCADE;

CREATE TABLE TB_ASMI_DESIGN_OBJECTS (
  APP_ID VARCHAR(100) NOT NULL,
  SCREEN_ID VARCHAR(100) NOT NULL,
  LAYOUT_ID VARCHAR(100) NOT NULL,
  DESIGN_ID VARCHAR(100) NOT NULL,
  PARENT_ID VARCHAR(100) NOT NULL,
  CHILD_ID VARCHAR(100) NOT NULL,
  CHILD_SEQ int NOT NULL,
  PRIMARY KEY (APP_ID,SCREEN_ID,LAYOUT_ID,DESIGN_ID,PARENT_ID,CHILD_ID)
) ;


DROP TABLE IF EXISTS TB_ASCZ_SCREEN_LAYOUTS CASCADE;

CREATE TABLE TB_ASCZ_SCREEN_LAYOUTS (
  APP_ID varchar(6) NOT NULL,
  SCREEN_ID VARCHAR(100) NOT NULL,
  LAYOUT_ID VARCHAR(100) NOT NULL,
  DEFAULT_TEMPLATE VARCHAR(100) NOT NULL,
  CREATE_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  MAKER_ID VARCHAR(45),
  MAKER_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CHECKER_ID VARCHAR(45),
  CHECKER_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  AUTH_STATUS VARCHAR(1) DEFAULT 'U',
  VERSION_NO int DEFAULT 1,
  PRIMARY KEY (APP_ID,SCREEN_ID,LAYOUT_ID)
) ;


DROP TABLE IF EXISTS TB_ASCZ_TEMPLATE_OBJECTS CASCADE;

CREATE TABLE TB_ASCZ_TEMPLATE_OBJECTS (
  APP_ID VARCHAR(6) NOT NULL,
  SCREEN_ID VARCHAR(100) NOT NULL,
  LAYOUT_ID VARCHAR(100) NOT NULL,
  TEMPLATE_ID VARCHAR(100) NOT NULL,
  PARENT_ID VARCHAR(100) NOT NULL,
  CHILD_ID VARCHAR(100) NOT NULL,
  CHILD_SEQ int NOT NULL,
  PRIMARY KEY (APP_ID,SCREEN_ID,LAYOUT_ID,TEMPLATE_ID,PARENT_ID,CHILD_ID)
) ;

DROP TABLE IF EXISTS TB_ASTP_SESSION_STORAGE CASCADE;

CREATE TABLE TB_ASTP_SESSION_STORAGE(
APP_ID VARCHAR(100) NOT NULL,
USER_ID VARCHAR(100) NOT NULL,
SESSION_ID VARCHAR(255) NOT NULL,
DEVICE_ID VARCHAR(255) NULL,
SESSION_KEY VARCHAR(255) NOT NULL,
SESSION_VALUE text NOT NULL,
CREATED_BY VARCHAR(100) NULL,
CREATE_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY (APP_ID,USER_ID,SESSION_ID, SESSION_KEY)
);

DROP TABLE IF EXISTS TB_DBTP_TXN_MASTER CASCADE;

CREATE TABLE TB_DBTP_TXN_MASTER (
  TXN_REF_NO VARCHAR(255) NOT NULL,
  APP_ID VARCHAR(6) NOT NULL,
  USER_ID VARCHAR(100) NOT NULL,
  CUSTOMER_ID VARCHAR(100) NOT NULL,
  AMOUNT NUMERIC(22,3) NOT NULL,
  TXN_TYPE VARCHAR(20) NOT NULL,
  TXN_STATUS VARCHAR(1) DEFAULT 'U',
  CREATION_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  COMPLETION_TS TIMESTAMP NULL,
  PRIMARY KEY (TXN_REF_NO)
);

DROP TABLE IF EXISTS TB_ASLG_DEVICE_LOCATION CASCADE;

CREATE TABLE TB_ASLG_DEVICE_LOCATION (
  APP_ID VARCHAR(100) NOT NULL,
  DEVICE_ID VARCHAR(255) NOT NULL,
  LATITUDE VARCHAR(255) DEFAULT NULL,
  LONGITUDE VARCHAR(255) DEFAULT NULL,
  CREATE_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (APP_ID,DEVICE_ID)
 );

DROP TABLE IF EXISTS TB_ASMI_CAPTCHA_DTLS CASCADE;

CREATE TABLE TB_ASMI_CAPTCHA_DTLS (
  CAPTCHA_REF int NOT NULL,
  APP_ID varchar(100) ,
  CAPTCHA_STRING VARCHAR(255),
  INTERFACE_ID varchar(100) ,
  SESSION_ID varchar(255),
  CREATE_TS timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  VALIDATE_TS timestamp,
  CAPTCHA_STATUS VARCHAR(2) DEFAULT 'NP',
  PRIMARY KEY (CAPTCHA_REF)
);

DROP TABLE IF EXISTS TB_ASMI_CNVUI_MASTER CASCADE;

CREATE TABLE TB_ASMI_CNVUI_MASTER (
  APP_ID varchar(100) NOT NULL,
  CNVUI_ID varchar(100) NOT NULL,
  CNVUI_DESC varchar(100),
  CREATE_USER_ID varchar(100) DEFAULT NULL,
  CREATE_TS timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO int DEFAULT 1,
  CONSTRAINT TB_ASMI_CNVUI_MASTER_PK PRIMARY KEY (APP_ID,CNVUI_ID)
);

DROP TABLE IF EXISTS TB_ASMI_DLG_MASTER CASCADE;

CREATE TABLE TB_ASMI_DLG_MASTER (
  APP_ID varchar(100) NOT NULL,
  CNVUI_ID varchar(100) NOT NULL,
  DLG_ID varchar(100) NOT NULL,
  DLG_DESC varchar(100),
  DLG_TYPE varchar(100),
  DLG_SEQ int,
  NXT_DLG_ID varchar(100),
  RESP_DLG_ID varchar(100),
  RESP_TYPE varchar(100),
  SCREEN_ID varchar(100),
  INTERFACE_ID varchar(100),
  CREATE_USER_ID varchar(100) DEFAULT NULL,
  CREATE_TS timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  MAKER_ID VARCHAR(45),
  MAKER_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CHECKER_ID VARCHAR(45),
  CHECKER_TS TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  AUTH_STATUS VARCHAR(45) DEFAULT 'U',
  VERSION_NO int DEFAULT 1,
  CONSTRAINT TB_ASMI_DLG_MASTER_PK PRIMARY KEY (APP_ID,CNVUI_ID,DLG_ID)
);

DROP TABLE IF EXISTS TB_ASMI_CNVUI_SCR CASCADE;

CREATE TABLE TB_ASMI_CNVUI_SCR (
  APP_ID varchar(100) NOT NULL,
  SCREEN_ID varchar(100) NOT NULL,
  SCREEN_DESC varchar(100),
  SCREEN_DEF TEXT,
  SCREEN_DESIGN TEXT,
  SCREEN_HTML TEXT,
  CREATE_USER_ID varchar(100) DEFAULT NULL,
  CREATE_TS timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  VERSION_NO int DEFAULT 1,
  CONSTRAINT TB_ASMI_CNVUI_SCR_PK  PRIMARY KEY (APP_ID,SCREEN_ID)
);

DROP TABLE IF EXISTS TB_ASLG_CNVUI_TXN_LOG CASCADE;

CREATE TABLE TB_ASLG_CNVUI_TXN_LOG (
  TXN_REF varchar(255) NOT NULL,
  APP_ID varchar(100),
  CNVUI_ID varchar(100),
  RESP_DLG_ID varchar(100),
  SCREEN_DATA TEXT,
  CREATE_USER_ID varchar(100) DEFAULT NULL,
  CREATE_TS timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  UPDATE_TS timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT TB_ASLG_CNVUI_TXN_LOG_PK PRIMARY KEY (TXN_REF)
);

DROP TABLE IF EXISTS TB_ASMI_CS_NONCEDETAILS CASCADE;

CREATE TABLE TB_ASMI_CS_NONCEDETAILS (
  DEVICE_ID varchar(100) ,
  APP_ID varchar(100),
  REQUEST_ID varchar(255),
  CLIENT_NONCE varchar(100),
  SERVER_NONCE varchar(100),
  STATUS varchar(100) ,
  SERVER_TOKEN varchar(100),
  CREATE_TS timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT TB_ASMI_CS_NONCE__PK PRIMARY KEY (APP_ID,DEVICE_ID,REQUEST_ID,CLIENT_NONCE,SERVER_NONCE)
);

CREATE OR REPLACE FUNCTION DateDiff(units VARCHAR(30), start_t TIMESTAMP, end_t TIMESTAMP)
     RETURNS INT AS $$
   DECLARE
     diff_interval INTERVAL; 
     diff INT = 0;
   BEGIN
     diff_interval = end_t - start_t;
     diff = diff + DATE_PART('day', diff_interval);
     IF units IN ('week') THEN
       diff = diff/7;
       RETURN diff;
     END IF;
     IF units IN ('day') THEN
       RETURN diff;
     END IF;
     diff = diff * 24 + DATE_PART('hour', diff_interval); 
     IF units IN ('hour') THEN
        RETURN diff;
     END IF;
     diff = diff * 60 + DATE_PART('minute', diff_interval);
     IF units IN ('minute') THEN
        RETURN diff;
     END IF;
     diff = diff * 60 + DATE_PART('second', diff_interval);
     RETURN diff;
   END;
   $$ LANGUAGE plpgsql;
 
CREATE OR REPLACE FUNCTION to_milliseconds(start_t TIMESTAMP,end_t TIMESTAMP)
 RETURNS INT AS $$ 
 DECLARE
     diff INT = 0;
 BEGIN 
     diff=round((EXTRACT(EPOCH FROM end_t)-EXTRACT(EPOCH FROM start_t))*1000);
     RETURN diff;
 END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE VIEW VW_LOCATION_DETAILS AS
SELECT * FROM TB_ASTP_LAST_LOGIN A where A.SESSION_ID IS NOT NULL
AND DateDiff('second', date_trunc('second',LAST_REQ_TIME)::TIMESTAMP,date_trunc('second',now())::TIMESTAMP) <
(SELECT SESSION_TIMEOUT FROM TB_ASMI_SECURITY_PARAMETERS C WHERE A.APP_ID=C.APP_ID);

CREATE OR REPLACE VIEW VW_ACTIVE_SESSIONS AS
SELECT B.OS,A.APP_ID, COUNT(*) as COUNT
FROM TB_ASTP_LAST_LOGIN A,TB_ASMI_DEVICE_MASTER B
WHERE A.APP_ID =B.APP_ID
AND A.DEVICE_ID = B.DEVICE_ID
AND A.SESSION_ID IS NOT NULL
AND DateDiff('second', date_trunc('second',LAST_REQ_TIME)::TIMESTAMP,date_trunc('second',now())::TIMESTAMP) < 
(SELECT SESSION_TIMEOUT FROM TB_ASMI_SECURITY_PARAMETERS C WHERE A.APP_ID=C.APP_ID )
GROUP BY B.OS,A.APP_ID
union all
SELECT A.DEVICE_ID,A.APP_ID, COUNT(*) as COUNT
FROM TB_ASTP_LAST_LOGIN A
WHERE A.DEVICE_ID IN ('WEB','SIMULATOR')
AND A.SESSION_ID IS NOT NULL
AND  DateDiff('second', date_trunc('second',LAST_REQ_TIME)::TIMESTAMP,date_trunc('second',now())::TIMESTAMP) < 
(SELECT SESSION_TIMEOUT FROM TB_ASMI_SECURITY_PARAMETERS C WHERE A.APP_ID=C.APP_ID )
GROUP BY A.DEVICE_ID,A.APP_ID;


CREATE OR REPLACE VIEW VW_ACTIVE_INACTIVE_USERS
AS
SELECT t1.APP_ID,DATE(date_trunc('day',t1.CREATE_TS)) as CREATE_TS, count(*) as ACTIVE , 0 INACTIVE
FROM TB_ASMI_USER t1
LEFT JOIN TB_ASTP_LAST_LOGIN t2 ON t2.USER_ID = t1.USER_ID AND t2.APP_ID = t1.APP_ID 
WHERE t2.USER_ID IS NOT NULL AND t1.USER_ACTIVE='Y'
GROUP BY t1.APP_ID,DATE(date_trunc('day',t1.CREATE_TS))
UNION ALL
SELECT t1.APP_ID,DATE(date_trunc('day',t1.CREATE_TS)) as CREATE_TS, 0 ACTIVE, count(*) as INACTIVE
FROM TB_ASMI_USER t1
LEFT JOIN TB_ASTP_LAST_LOGIN t2 ON t2.USER_ID = t1.USER_ID AND t2.APP_ID = t1.APP_ID 
WHERE t2.USER_ID IS NULL AND t1.USER_ACTIVE='Y'
GROUP BY t1.APP_ID,DATE(date_trunc('day',t1.CREATE_TS));

CREATE OR REPLACE VIEW VW_LOGIN_REPORT AS
select tb.APP_ID,tb.DEVICE_ID,DATE(tb.CREATE_TS) as AccessDate,count(*) as TotalTxns,0 Logins,0 DistinctLogins
from  TB_ASLG_TXN_DETAIL tb where tb.TXN_STAT='S'
group by tb.APP_ID,tb.DEVICE_ID,DATE(tb.CREATE_TS)
union all
select tb2.APP_ID,tb2.DEVICE_ID,DATE(tb2.CREATE_TS) as AccessDate,0 TotalTxns,count(*) as Logins,
count(distinct DATE(tb2.CREATE_TS)) as DistinctLogins
from TB_ASLG_TXN_DETAIL tb2 where 
(tb2.INTERFACE_ID='appzillonReLoginRequest' OR tb2.INTERFACE_ID='appzillonAuthenticationRequest')
and tb2.TXN_STAT='S' 
Group by tb2.APP_ID,tb2.USER_ID,tb2.DEVICE_ID,DATE(tb2.CREATE_TS);

CREATE OR REPLACE VIEW VW_CUSTOMER_DETAILS AS
SELECT APP_ID,USER_ID,DATE(CREATE_TS) AS AccessDate,SESSION_ID,min(ST_TM) as ST_TM,max(END_TM) as END_TM,Count(*) As 
TotalTxns,0 DistinctTxns,LATITUDE,LONGITUDE,FORMATTED_ADDRESS 
FROM TB_ASLG_TXN_DETAIL 
WHERE TXN_STAT='S' 
GROUP BY APP_ID,USER_ID,DATE(CREATE_TS),SESSION_ID,LATITUDE,LONGITUDE,FORMATTED_ADDRESS
Union all
SELECT APP_ID,USER_ID,DATE(CREATE_TS) AS AccessDate,SESSION_ID,min(ST_TM) as ST_TM,max(END_TM) as END_TM,0 TotalTxns, 
Count(distinct(INTERFACE_ID)) AS DistinctTxns,LATITUDE,LONGITUDE,FORMATTED_ADDRESS
FROM TB_ASLG_TXN_DETAIL 
WHERE TXN_STAT='S'
GROUP BY APP_ID,USER_ID,DATE(CREATE_TS),SESSION_ID,INTERFACE_ID,LATITUDE,LONGITUDE,FORMATTED_ADDRESS;

CREATE OR REPLACE VIEW VW_CUSTOMER_REPORT
AS
SELECT tb.APP_ID,tb.USER_ID,tb.SESSION_ID,
to_milliseconds(MIN(ST_TM),MAX(END_TM)) as tm, 
count(*) as TotalTxns,count(distinct(tb.INTERFACE_ID)) as DistinctTxns, 0 Logins, 0 DistinctLogins
FROM  TB_ASLG_TXN_DETAIL tb 
WHERE tb.TXN_STAT='S' 
GROUP BY tb.APP_ID,tb.USER_ID,tb.SESSION_ID
UNION ALL
SELECT tb2.APP_ID,tb2.USER_ID, null SESSION_ID,
null as tm, 
0 TotalTxns,0 DistinctTxns,count(*) as Logins, count(distinct date(tb2.CREATE_TS)) as DistinctLogins
FROM TB_ASLG_TXN_DETAIL tb2 WHERE 
(tb2.INTERFACE_ID='appzillonReLoginRequest' OR tb2.INTERFACE_ID='appzillonAuthenticationRequest')
AND tb2.TXN_STAT='S' 
GROUP BY tb2.APP_ID,tb2.USER_ID;

CREATE OR REPLACE VIEW VW_LAT_LON_DETAILS
AS
SELECT APP_ID,USER_ID,COUNT(LONGITUDE) as COUNT_LON, LONGITUDE, 
COUNT(LATITUDE) as COUNT_LAT,LATITUDE, FORMATTED_ADDRESS FROM TB_ASLG_TXN_DETAIL GROUP BY LONGITUDE, LATITUDE, FORMATTED_ADDRESS, APP_ID, USER_ID;

CREATE OR REPLACE VIEW VW_TXN_APP_USAGE AS
SELECT txn.APP_ID,DATE(txn.CREATE_TS) AS AccessDate,intf.DESCRIPTION, txn.TXN_STAT,
MIN(to_milliseconds(txn.ST_TM,txn.END_TM)) AS MinTime, MAX(to_milliseconds(txn.ST_TM,txn.END_TM)) AS MaxTime, 
AVG(to_milliseconds(txn.ST_TM,txn.END_TM)) AS AvgTime, count(txn.INTERFACE_ID) AS IntfCount
FROM TB_ASLG_TXN_DETAIL txn,TB_ASMI_INTF_MASTER intf 
WHERE txn.INTERFACE_ID = intf.INTERFACE_ID
GROUP BY txn.APP_ID,txn.INTERFACE_ID,DATE(txn.CREATE_TS),intf.DESCRIPTION,txn.TXN_STAT;

CREATE OR REPLACE VIEW VW_ASMI_DEVICE_GRPS AS
SELECT APP_ID, DEVICE_GROUP_ID, DEVICE_GROUP_DESCRIPTION, OS,HEIGHT, WIDTH, 'PORTRAIT' AS ORIENTATION
FROM TB_ASMI_DEVICE_GRPS WHERE ORIENTATION_LOCK = 'ANY'
UNION ALL
SELECT APP_ID, DEVICE_GROUP_ID, DEVICE_GROUP_DESCRIPTION, OS,HEIGHT, WIDTH, 'LANDSCAPE' AS ORIENTATION
FROM TB_ASMI_DEVICE_GRPS WHERE ORIENTATION_LOCK = 'ANY'
UNION ALL
SELECT APP_ID, DEVICE_GROUP_ID, DEVICE_GROUP_DESCRIPTION, OS,HEIGHT, WIDTH, ORIENTATION_LOCK AS ORIENTATION
FROM TB_ASMI_DEVICE_GRPS WHERE ORIENTATION_LOCK != 'ANY';


CREATE OR REPLACE VIEW VW_ASMI_MICROAPPS AS
SELECT T2.APP_ID AS APP_ID, T2.SCREEN_ID, T2.MICRO_APP_ID AS MICRO_APP_ID, T1.APP_NAME AS MICRO_APP_NAME, T1.APP_ICON AS MICRO_APP_ICON,
T1.MICRO_APP_TYPE AS MICRO_APP_TYPE FROM TB_ASMI_APP_MASTER T1, TB_ASMI_SCREEN_MICRO_APP T2
WHERE T1.APP_ID = T2.MICRO_APP_ID AND T1.BASE_APP = 'N';

CREATE OR REPLACE VIEW VW_ASMI_NANOAPPS AS
SELECT T1.APP_ID, T2.SCREEN_ID, T1.SCREEN_ID AS CALLFORM_ID, T1.SCREEN_NAME AS CALLFORM_NAME, T1.SCREEN_ICON AS CALLFORM_ICON
FROM TB_ASMI_SCR_MASTER T1, TB_ASMI_SCREEN_WIDGETS T2
WHERE T1.APP_ID = T2.APP_ID AND T1.SCREEN_ID = T2.CALLFORM_ID AND T1.SCREEN_TYPE = 'CALL';
